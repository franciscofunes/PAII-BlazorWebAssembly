@page "/cotizaciones"
@inject HttpClient Http

<PageTitle>Dolar Pulse - Cotizaciones del Dólar AR</PageTitle>

<div class="bg-blue-400 min-h-screen flex flex-col justify-center items-center text-white p-4">
    <h1 class="text-2xl font-semibold">Cotizaciones del Dólar</h1>

    @if (cotizaciones == null)
    {
        <p class="text-gray-600"><em>Cargando...</em></p>
    }
    else if (cotizaciones.Length == 0)
    {
        <p class="text-red-600">No se encontraron cotizaciones.</p>
    }
    else
    {
        <div class="overflow-x-auto w-full">
            <table class="min-w-full bg-white border-collapse border border-gray-300 mt-4">
                <thead>
                    <tr>
                        <th
                            class="px-6 py-3 bg-gray-100 text-left text-xs leading-4 font-medium text-gray-600 uppercase tracking-wider font-bold">
                            Nombre</th>
                        <th
                            class="px-6 py-3 bg-gray-100 text-left text-xs leading-4 font-medium text-gray-600 uppercase tracking-wider font-bold">
                            Compra</th>
                        <th
                            class="px-6 py-3 bg-gray-100 text-left text-xs leading-4 font-medium text-gray-600 uppercase tracking-wider font-bold">
                            Venta</th>
                        <th
                            class="px-6 py-3 bg-gray-100 text-left text-xs leading-4 font-medium text-gray-600 uppercase tracking-wider font-bold">
                            Fecha de Actualización</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cotizacion in cotizaciones)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-300 text-black">@(cotizacion?.nombre !=
                        null ? cotizacion.nombre.ToString() : "-")
                            </td>
                            <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-300 text-black">
                                @(cotizacion?.compra != null ? cotizacion.compra.ToString() : "-")
                            </td>
                            <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-300 text-black">@(cotizacion?.venta !=
                        null ? cotizacion.venta.ToString() : "-")</td>
                            <td class="px-6 py-4 whitespace-no-wrap border-b border-gray-300 text-black">
                                @(cotizacion?.fechaActualizacion != null ? cotizacion.fechaActualizacion.ToString() : "-")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <p class="mt-4 text-sm text-gray-600">
            <em>Fuente de datos: <a href="https://dolarapi.com/docs" target="_blank" rel="noopener noreferrer"
                    class="hover:font-bold">dolarapi.com</a> <i class="fa fa-copyright" aria-hidden="true"></i></em>
        </p>

    }
</div>

@code {
    private Cotizacion[]? cotizaciones;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cotizaciones = await Http.GetFromJsonAsync<Cotizacion[]>("https://dolarapi.com/v1/dolares");
        }
        catch (HttpRequestException ex)
        {
            // Handle HTTP request exceptions, e.g., network issues.
            // You can log the exception for debugging.
            cotizaciones = Array.Empty<Cotizacion>();
        }
        catch (Exception ex)
        {
            // Handle other exceptions.
            // You can log the exception for debugging.
            cotizaciones = Array.Empty<Cotizacion>();
        }
    }

    public class Cotizacion
    {
        public string? casa { get; set; }
        public string? nombre { get; set; }
        public decimal? compra { get; set; }
        public decimal? venta { get; set; }
        public DateTime? fechaActualizacion { get; set; }
    }
}
